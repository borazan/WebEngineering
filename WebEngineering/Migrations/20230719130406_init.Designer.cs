// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230719130406_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a1fa31e3-89db-408e-b7bd-cb90b6468a89",
                            ConcurrencyStamp = "18ffc6a9-42fe-4812-91e9-278b7812aee0",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "06070146-1f25-49bc-8be7-b5a2b0b2abb4",
                            RoleId = "a1fa31e3-89db-408e-b7bd-cb90b6468a89"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b7047b5c-1431-425b-b249-a7df9f6d4be0",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cb663274-e84b-4f6b-85b6-dfa72a538cc8",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBzjOnt7Jke3H7jHwCIgJt9YC0RtA0rFVxEYVhq3xSCFtR8lrN3EsUgbesRP0cUa1g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "35cb832e-5db1-489c-93bd-07713834fc22",
                            TwoFactorEnabled = false,
                            UserName = "demo01@gmail.com"
                        },
                        new
                        {
                            Id = "611000d3-5b87-4967-ac7a-1c7704edc533",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c2413b22-45e3-4029-9ebc-44cf5b16c1d8",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEDY0N0WeQEeBGurr2E142lDMQOysD4Kbj2cnlYf1d+f/D2grchH6Zt2Oyw4f9FvF1Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "17513adb-1c07-422e-b54f-988ea731ab77",
                            TwoFactorEnabled = false,
                            UserName = "demo02@gmail.com"
                        },
                        new
                        {
                            Id = "17419a28-5b7b-4ef7-b3c6-5dc087b04e60",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "98baba0a-e6ba-4ef0-8f9e-9852c43a4e12",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMMX++vM0214m0MTMYh/J2EaMRBXbV9h0wjwLBvzsfvzz2j3X5TfuH8jXDgXeEzyqw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "be886128-c8f6-40f2-bc66-c233552acfa9",
                            TwoFactorEnabled = false,
                            UserName = "demo03@gmail.com"
                        },
                        new
                        {
                            Id = "cb42b4b8-c148-48ba-a88a-213224928ba5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f3b5396f-89a3-4d9c-8f4f-a754ac1c62a8",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO04@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIthy7e3nRqj2aSCgtN3o1z1GwAh6/DRBFLK2WMWpKPLWF6kRJVvtEwvVLGRQ2OJag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "630bfd0e-b9e3-47b3-8e3c-dfda8030302b",
                            TwoFactorEnabled = false,
                            UserName = "demo04@gmail.com"
                        },
                        new
                        {
                            Id = "06070146-1f25-49bc-8be7-b5a2b0b2abb4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "37858770-cc61-4ba3-8ad0-d6c3fe06689f",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEIQL99QUv+dVMq9zNSkdfpLUFv0hThSMOE+TjYvPrtOyV7HUZlsizaEa+NR4fsFVtg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "767fe920-9325-4942-a794-e6008df4ee86",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2023, 7, 10, 3, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 123,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 4, 25, 10, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 209,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2022, 10, 28, 2, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 46,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 12, 8, 5, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2023, 12, 3, 15, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 171,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2023, 10, 1, 21, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 185,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2023, 8, 25, 2, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 295,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 2, 8, 15, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2022, 3, 9, 8, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 155,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2022, 4, 2, 3, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 85,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 2, 3, 8, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 264,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 7, 20, 22, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 197,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 6, 4, 10, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 102,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 11, 16, 23, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 293,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 11, 26, 6, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 225,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2023, 10, 25, 19, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 210,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2023, 8, 4, 18, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2023, 4, 9, 3, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 250,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 4, 25, 15, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 107,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 7, 12, 14, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 158,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2023, 11, 17, 15, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 133,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2023, 7, 19, 0, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 101,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2023, 6, 22, 2, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 281,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2023, 12, 14, 7, 32, 0, 0, DateTimeKind.Unspecified),
                            Menge = 42,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2022, 8, 19, 5, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 117,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2022, 5, 12, 1, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 163,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 11, 19, 16, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 214,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2022, 1, 30, 17, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 78,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2023, 11, 21, 21, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 174,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2023, 11, 29, 23, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 268,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2023, 1, 11, 0, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 129,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2022, 4, 19, 15, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 192,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2022, 2, 24, 23, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 273,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2023, 8, 19, 23, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 125,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2023, 6, 25, 6, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 149,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2022, 10, 28, 21, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 186,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2023, 1, 21, 6, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 229,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2022, 12, 28, 13, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 165,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2022, 5, 23, 23, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 176,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2022, 9, 3, 9, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 65,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2022, 10, 7, 0, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 293,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2023, 6, 28, 23, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 237,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2023, 10, 26, 1, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 128,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2023, 3, 2, 21, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 158,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 11, 30, 17, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 274,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2023, 8, 14, 23, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 149,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2023, 10, 2, 3, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 36,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 2, 14, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 223,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2022, 2, 11, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 104,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2023, 9, 12, 4, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2022, 10, 4, 18, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 284,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2023, 5, 28, 10, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 184,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2023, 4, 7, 11, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 70,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2023, 6, 17, 15, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 246,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2023, 12, 21, 19, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 156,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2023, 12, 8, 9, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 268,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2022, 5, 13, 21, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 172,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2022, 3, 23, 21, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 164,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2023, 11, 18, 21, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 162,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2022, 3, 1, 23, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 171,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 4, 29, 14, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 142,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2023, 7, 23, 11, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 156,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2022, 5, 29, 7, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 28,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2022, 11, 18, 21, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 36,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2023, 8, 15, 3, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 52,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2022, 7, 16, 12, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 261,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2022, 3, 20, 17, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 5,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2023, 6, 10, 10, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 183,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2022, 4, 12, 12, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 150,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2022, 8, 30, 2, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 98,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2022, 3, 5, 1, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 146,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2022, 11, 10, 14, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 5,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2023, 4, 24, 1, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 227,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2022, 3, 22, 18, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 267,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2022, 5, 22, 23, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 208,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2023, 4, 9, 5, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 174,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2023, 11, 19, 19, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 283,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2022, 5, 29, 1, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 253,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2022, 5, 15, 15, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 287,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2022, 7, 17, 4, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 243,
                            ProduktId = -4
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2023, 12, 2, 14, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3932,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2022, 8, 28, 14, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4533,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2022, 10, 18, 18, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3494,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 6, 20, 8, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4682,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 4, 19, 19, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 942,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 4, 16, 23, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4787,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 7, 4, 14, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 501,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 12, 28, 9, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 922,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2022, 10, 19, 5, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2434,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2022, 1, 19, 1, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2188,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2023, 7, 29, 9, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4202,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2022, 4, 26, 0, 11, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2507,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2023, 9, 24, 21, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3494,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2022, 11, 23, 23, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4483,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 3, 22, 13, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3678,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 5, 6, 23, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 643,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 9, 30, 15, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1497,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 4, 29, 22, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3790,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 3, 11, 14, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4923,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 2, 9, 12, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4276,
                            ProduktId = -4
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Titanfilter"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Glasgehäuse"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Acrylschalter"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Textilfedern"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Titangehäuse"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Goldrohre"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Keramikunterlegscheiben"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Glasunterlegscheiben"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Silberschalter"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Keramikschrauben"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Textilmuttern"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Kunststoffriemen"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Gummischrauben"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Glasunterlegscheiben"
                        },
                        new
                        {
                            Id = -15,
                            Name = "Textilriemen"
                        },
                        new
                        {
                            Id = -16,
                            Name = "Silberkabel"
                        },
                        new
                        {
                            Id = -17,
                            Name = "Acrylzahnräder"
                        },
                        new
                        {
                            Id = -18,
                            Name = "Keramikrohre"
                        },
                        new
                        {
                            Id = -19,
                            Name = "Textilkabel"
                        },
                        new
                        {
                            Id = -20,
                            Name = "Textilgehäuse"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("LieferungId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("LieferungId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany("Bestellungen")
                        .HasForeignKey("ProduktId");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany("Lieferungen")
                        .HasForeignKey("ProduktId");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.HasOne("WebEngineering.Models.Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Lieferung", "Lieferung")
                        .WithMany()
                        .HasForeignKey("LieferungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Lieferung");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Navigation("Bestellungen");

                    b.Navigation("Lieferungen");
                });
#pragma warning restore 612, 618
        }
    }
}
