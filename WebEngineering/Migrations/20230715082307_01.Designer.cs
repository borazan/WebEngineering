// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230715082307_01")]
    partial class _01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "50da61af-5496-4e5f-bba0-510c14c6e5f7",
                            ConcurrencyStamp = "6c560b26-a37b-4b26-9f2b-a1e4f7bff109",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "0921b8ab-d5c6-4619-81e0-b43f92072264",
                            RoleId = "50da61af-5496-4e5f-bba0-510c14c6e5f7"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8112e46a-4766-442e-9fc5-4376440acbe8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7071c698-c1c8-46b0-82e5-c69db353a337",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01",
                            PasswordHash = "AQAAAAEAACcQAAAAECY9sCe7ncZEhU0/D31WNcE5VexdcQ40Su+eybUjmsAbXcj9SFeFeeu/X73nKcuoxw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "223e7de1-e1c2-4883-aa20-ce1b4a5a1318",
                            TwoFactorEnabled = false,
                            UserName = "demo01"
                        },
                        new
                        {
                            Id = "ed8a1276-4583-4260-afbd-d974a42de397",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bcb03b0b-6e4e-4155-af25-37947247012b",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02",
                            PasswordHash = "AQAAAAEAACcQAAAAEN+MphtsmQtaXo1/pEWwpodVHm0HBF+M7bo1Ie8sS3tNtXb8bpMT5LNcjioHP3cUiA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "54aabf48-9267-4433-ada1-5572d782560a",
                            TwoFactorEnabled = false,
                            UserName = "demo02"
                        },
                        new
                        {
                            Id = "e63e539a-a8ba-4d8c-82b3-7b1aa86fe992",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5e04f3be-b906-44be-add7-0e64e7ed7791",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03",
                            PasswordHash = "AQAAAAEAACcQAAAAEBZNv8bHuhhAOX+x2qwu6M/ZY6K31haHdXiMlszxTKl4gb8z+jaVgpfDukNRPn1bug==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a34a6538-2ab7-4c2c-b753-e4a85306b89a",
                            TwoFactorEnabled = false,
                            UserName = "demo03"
                        },
                        new
                        {
                            Id = "8fc8cf74-57e4-469b-9b64-ecf9640f7e25",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bfcdc538-13fa-4a26-a25b-930c76f0c5a6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO04",
                            PasswordHash = "AQAAAAEAACcQAAAAEH+hhSh7PdFcgDKB/71hGRiOFO0vdP0/FeEHj8+fvhpcI1cqujkGYPFeV/991MCgaQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cd65ad0c-b8a8-4efa-b9a4-581fb4c9be6a",
                            TwoFactorEnabled = false,
                            UserName = "demo04"
                        },
                        new
                        {
                            Id = "0921b8ab-d5c6-4619-81e0-b43f92072264",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c7bfd898-ddba-4b5a-88e1-231dcd414241",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEIrEIOaV6iCheSbpS245QYC9nQThQF95XfBwZJadLW45fXWFKd50ln2fYTG+iHe4YA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c7b664b5-f5d3-4980-afaf-4fce43132783",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2023, 5, 22, 18, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 279,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 12, 14, 15, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 143,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 2, 21, 19, 11, 0, 0, DateTimeKind.Unspecified),
                            Menge = 77,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 8, 11, 20, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 248,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2023, 12, 26, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 210,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2023, 1, 18, 18, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 270,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2023, 4, 16, 19, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 295,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2023, 2, 28, 12, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 43,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 5, 10, 2, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 147,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2022, 5, 10, 21, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 247,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 6, 25, 22, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 198,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 5, 18, 10, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 97,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 11, 17, 15, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 128,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 1, 23, 20, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 287,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 2, 3, 19, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 10, 19, 14, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 155,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 11, 11, 10, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 22,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2023, 5, 5, 6, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 213,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 11, 20, 19, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 183,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 6, 5, 16, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 212,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2023, 1, 30, 7, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 249,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2023, 8, 8, 4, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 98,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2022, 3, 22, 9, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 226,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2023, 12, 16, 9, 47, 0, 0, DateTimeKind.Unspecified),
                            Menge = 149,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2023, 3, 8, 5, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 183,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2022, 4, 17, 7, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 181,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 7, 4, 22, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 201,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2022, 7, 15, 10, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 53,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2022, 9, 30, 13, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2022, 10, 16, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 260,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2022, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 11,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2022, 3, 10, 23, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 262,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2023, 6, 20, 2, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 117,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2022, 12, 1, 19, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 173,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2022, 4, 3, 7, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 134,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2023, 7, 3, 4, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 235,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2023, 8, 8, 12, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 222,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2023, 1, 10, 7, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 136,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2022, 5, 5, 6, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 298,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2023, 8, 2, 2, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 237,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2023, 6, 18, 19, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 197,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2022, 2, 28, 2, 10, 0, 0, DateTimeKind.Unspecified),
                            Menge = 121,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2023, 2, 3, 14, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 196,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2022, 12, 2, 3, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 212,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 10, 23, 14, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 297,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2023, 6, 4, 15, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 166,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2022, 9, 8, 19, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 292,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 5, 21, 7, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 45,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2023, 7, 3, 2, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 12,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2022, 7, 5, 11, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 37,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2023, 9, 9, 23, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 165,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2023, 8, 3, 17, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 131,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2022, 9, 15, 7, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2023, 12, 21, 12, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 177,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2023, 9, 21, 8, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 123,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2022, 5, 1, 11, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 216,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2022, 11, 27, 11, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 271,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2023, 12, 3, 7, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 202,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2023, 10, 13, 5, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 192,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2023, 11, 21, 12, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 61,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 6, 24, 8, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2023, 5, 12, 8, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 260,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2023, 3, 12, 9, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 258,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2023, 2, 5, 7, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 69,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2022, 8, 3, 7, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 101,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2023, 2, 15, 5, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 68,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2023, 2, 13, 20, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 5,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2023, 2, 24, 19, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 95,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2022, 8, 12, 19, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 222,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2022, 11, 21, 14, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 125,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2022, 6, 3, 17, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 136,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2022, 12, 19, 21, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 150,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2022, 7, 9, 14, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 131,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2023, 1, 14, 2, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 258,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2023, 3, 18, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 146,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2023, 3, 16, 13, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 162,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2023, 7, 28, 0, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 8,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2023, 8, 13, 5, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 43,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2023, 7, 19, 9, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2023, 2, 14, 4, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 186,
                            ProduktId = -3
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2023, 9, 27, 20, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3681,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 4, 2, 16, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4933,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 11, 28, 22, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4695,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 4, 5, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1931,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 7, 11, 16, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2374,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2023, 12, 9, 3, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3844,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 5, 19, 13, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2980,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 5, 26, 14, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1210,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 4, 12, 14, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1423,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 2, 24, 4, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3835,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 4, 1, 16, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4202,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2022, 7, 14, 20, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 779,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 4, 6, 13, 11, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2119,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 1, 1, 3, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 603,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2023, 4, 7, 15, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2672,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 10, 25, 12, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3328,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 3, 21, 17, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1261,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 9, 29, 12, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4839,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2023, 4, 30, 13, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4634,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2022, 4, 1, 21, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1374,
                            ProduktId = -2
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Textilfilter"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Aluminiumsensoren"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Aluminiumriemen"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Aluminiumgehäuse"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Stahlkabel"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Gummimuttern"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Keramikventile"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Steindichtungen"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Betonriemen"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Papiergehäuse"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Plexiglasunterlegscheiben"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Kupferdichtungen"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Kunststoffdichtungen"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Bronzebolzen"
                        },
                        new
                        {
                            Id = -15,
                            Name = "Aluminiummuttern"
                        },
                        new
                        {
                            Id = -16,
                            Name = "Plexiglasmuttern"
                        },
                        new
                        {
                            Id = -17,
                            Name = "Silberzahnräder"
                        },
                        new
                        {
                            Id = -18,
                            Name = "Silberunterlegscheiben"
                        },
                        new
                        {
                            Id = -19,
                            Name = "Gummikabel"
                        },
                        new
                        {
                            Id = -20,
                            Name = "Metallschalter"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("LieferungId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("LieferungId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.HasOne("WebEngineering.Models.Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Lieferung", "Lieferung")
                        .WithMany()
                        .HasForeignKey("LieferungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Lieferung");

                    b.Navigation("Produkt");
                });
#pragma warning restore 612, 618
        }
    }
}
