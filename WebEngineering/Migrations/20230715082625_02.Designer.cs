// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230715082625_02")]
    partial class _02
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "1b08697c-2966-4480-a747-99abecda42dc",
                            ConcurrencyStamp = "3c907fdf-38e3-481e-9de8-240bdcbf3812",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "cabd83c0-5826-465d-b401-604cd1955566",
                            RoleId = "1b08697c-2966-4480-a747-99abecda42dc"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "3547d056-87ed-4dc1-adeb-3b03b588f2b8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "77b9bfa8-b88f-459f-8eeb-26b19659c73d",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEFXFkC9ofPn87AhIHpvomP7uAVnHzLHKKEl+0qBS0CUJ4Q//IG0lmDjnDJsXZ1Qewg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "27dcc8f3-dc32-4131-b19a-5c5090c81022",
                            TwoFactorEnabled = false,
                            UserName = "demo01@gmail.com"
                        },
                        new
                        {
                            Id = "8d9095ea-cf62-442a-94a2-e237df42bbbf",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "29c6a031-b0b3-4eb7-97c3-eef5b6805cd7",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAECEPkT/N1c0y9QIf4KXN8dOlf3ER+bSNyYtRQl5kA5WQ0m+YJ7pDWOcTrfwImWTa/Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "24f24c5b-450b-42a9-b7c0-a0c51da97215",
                            TwoFactorEnabled = false,
                            UserName = "demo02@gmail.com"
                        },
                        new
                        {
                            Id = "73939acc-e242-4942-9091-0249c06ee341",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "589c6a0e-881d-43ec-9640-c5903c1a9c53",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEO6IDF8iXfyvAZSI8fbxiyJh3cKfOPWkHx4PID/Dkpui3j8ADWme32zd84lDRX1Blg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "95456dbb-69f9-41c8-8f44-e0fb270f2a2e",
                            TwoFactorEnabled = false,
                            UserName = "demo03@gmail.com"
                        },
                        new
                        {
                            Id = "82b1a4ca-6cf4-4b12-8b5d-5391ffc24f7a",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "e3567953-a7bd-4d3a-b832-63f1f7c908d8",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO04@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEBx9gLsjHQF+BJgko0acAQ3aY4Zj31h4J1JROOigSbQ4ZF04ObfjGwjxf8jCjgcuaQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0254c1f8-0097-4203-be27-9446a8c717a7",
                            TwoFactorEnabled = false,
                            UserName = "demo04@gmail.com"
                        },
                        new
                        {
                            Id = "cabd83c0-5826-465d-b401-604cd1955566",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0c004468-e518-4de2-bb56-b4ff4bcbf3b3",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEM1/JhUui5DIxg4LW6KMRBa+xS9xUtvRh7Wssit/nukRD0Ck+91eeKcsmhZpcGggTg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d8b2ee83-48aa-48ea-8bc7-55021eeb2a5a",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 9, 19, 6, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 293,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2022, 2, 27, 5, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 132,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 11, 18, 7, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 254,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 10, 3, 4, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 88,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 12, 26, 10, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 211,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 9, 25, 2, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 127,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2023, 3, 2, 23, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 163,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 1, 27, 22, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 12,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 3, 4, 16, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 170,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2022, 6, 5, 5, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 137,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 11, 13, 20, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 263,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 5, 19, 1, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 268,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2023, 7, 19, 8, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 184,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2022, 5, 20, 0, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 25,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2023, 8, 13, 10, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 58,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 1, 14, 9, 10, 0, 0, DateTimeKind.Unspecified),
                            Menge = 25,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2023, 6, 20, 6, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 18,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2023, 4, 23, 12, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 156,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 10, 1, 13, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 184,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2022, 8, 4, 12, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 138,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2023, 11, 4, 9, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 295,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2022, 5, 27, 10, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 230,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2022, 6, 22, 15, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 177,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2023, 12, 20, 23, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 167,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2023, 2, 20, 0, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 126,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2022, 12, 18, 4, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 132,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 7, 11, 1, 41, 0, 0, DateTimeKind.Unspecified),
                            Menge = 268,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2023, 12, 28, 2, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 27,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2022, 12, 8, 3, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 216,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2023, 8, 18, 4, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 105,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2022, 11, 15, 13, 32, 0, 0, DateTimeKind.Unspecified),
                            Menge = 194,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2022, 10, 25, 1, 32, 0, 0, DateTimeKind.Unspecified),
                            Menge = 288,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2022, 9, 18, 22, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 154,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2023, 1, 9, 2, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 281,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2023, 5, 5, 5, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 260,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2022, 3, 20, 1, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 152,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2023, 10, 30, 6, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 207,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2022, 11, 25, 3, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 215,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2022, 1, 11, 13, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 65,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2023, 10, 27, 18, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 224,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2022, 7, 21, 8, 45, 0, 0, DateTimeKind.Unspecified),
                            Menge = 140,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2023, 2, 19, 21, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 236,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2023, 1, 9, 19, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 30,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2022, 3, 12, 5, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 287,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 11, 23, 14, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 298,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2022, 2, 10, 15, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 159,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2022, 4, 21, 6, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 195,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 5, 8, 17, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 166,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2022, 6, 4, 18, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 93,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2023, 10, 31, 3, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 125,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2022, 12, 24, 4, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 156,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2022, 6, 3, 17, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 78,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2022, 6, 10, 1, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 237,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2023, 5, 30, 11, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 281,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2023, 3, 30, 5, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 42,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2023, 5, 24, 14, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 257,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2022, 5, 29, 4, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 110,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2023, 12, 10, 10, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 260,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2022, 6, 2, 4, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 74,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2022, 8, 31, 4, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 132,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 12, 27, 10, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 193,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2022, 10, 31, 3, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 131,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2023, 6, 8, 14, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2022, 10, 14, 1, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 238,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2023, 8, 10, 4, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 162,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2023, 2, 16, 5, 11, 0, 0, DateTimeKind.Unspecified),
                            Menge = 201,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2022, 6, 24, 18, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 52,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2023, 8, 4, 23, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 38,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2023, 2, 22, 18, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 155,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2023, 7, 26, 11, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 292,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2022, 10, 2, 2, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 157,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2023, 3, 24, 1, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 261,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2022, 7, 23, 22, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 162,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2022, 12, 12, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2023, 11, 7, 3, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 44,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2023, 2, 9, 4, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 179,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2023, 6, 22, 14, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 54,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2022, 9, 10, 19, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 145,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2022, 4, 15, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 250,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2023, 7, 4, 15, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 168,
                            ProduktId = -1
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2023, 12, 23, 11, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4504,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 1, 8, 7, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1249,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 5, 19, 13, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2461,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 12, 25, 20, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 860,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2023, 7, 29, 4, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3265,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2022, 11, 17, 3, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1286,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 12, 1, 9, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4836,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2022, 7, 18, 10, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4036,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 2, 13, 21, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1341,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 3, 2, 8, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2800,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2023, 2, 8, 8, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4231,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2023, 6, 21, 23, 10, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2587,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2022, 1, 6, 12, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 992,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2022, 8, 18, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3939,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2023, 5, 15, 9, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1604,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 5, 7, 15, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 854,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2022, 8, 7, 17, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2554,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 9, 1, 4, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2475,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2023, 3, 5, 14, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4681,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 7, 18, 22, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2060,
                            ProduktId = -20
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Textildichtungen"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Stahlventile"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Keramikfedern"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Metallkabel"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Kupferfilter"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Keramikzahnräder"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Bronzedichtungen"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Goldmuttern"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Aluminiumfilter"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Bronzeriemen"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Titangehäuse"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Goldplatten"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Plexiglasventile"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Aluminiumfilter"
                        },
                        new
                        {
                            Id = -15,
                            Name = "Titanriemen"
                        },
                        new
                        {
                            Id = -16,
                            Name = "Plexiglasfedern"
                        },
                        new
                        {
                            Id = -17,
                            Name = "Gummifilter"
                        },
                        new
                        {
                            Id = -18,
                            Name = "Gummifilter"
                        },
                        new
                        {
                            Id = -19,
                            Name = "Steinventile"
                        },
                        new
                        {
                            Id = -20,
                            Name = "Golddichtungen"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BestellungId")
                        .HasColumnType("int");

                    b.Property<int>("LieferungId")
                        .HasColumnType("int");

                    b.Property<int>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BestellungId");

                    b.HasIndex("LieferungId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ViewModel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.ViewModel", b =>
                {
                    b.HasOne("WebEngineering.Models.Bestellung", "Bestellung")
                        .WithMany()
                        .HasForeignKey("BestellungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Lieferung", "Lieferung")
                        .WithMany()
                        .HasForeignKey("LieferungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany()
                        .HasForeignKey("ProduktId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestellung");

                    b.Navigation("Lieferung");

                    b.Navigation("Produkt");
                });
#pragma warning restore 612, 618
        }
    }
}
