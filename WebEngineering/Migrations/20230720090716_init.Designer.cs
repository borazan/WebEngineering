// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebEngineering.Data;

#nullable disable

namespace WebEngineering.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20230720090716_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "f0df742c-e23b-4b52-b2bd-f9f0880d3263",
                            ConcurrencyStamp = "c93aee0a-2d27-49bd-85f9-ba259dc8d5a7",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9fad4c83-847d-4fac-88d1-013234a00b30",
                            RoleId = "f0df742c-e23b-4b52-b2bd-f9f0880d3263"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebEngineering.Areas.Identity.Data.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fab4f32a-be2c-4391-b38a-fc877ffa67a6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d1289d3-f15f-462f-a59a-bc77d6f4ed20",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO01@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAENiijOdcpZB+hDgOlJVin1Fl0Po9tiPkS6GZfvQJGmWycZE4ji+nAFLR43rAQtgpcg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "af305aac-9bbd-4372-8a1f-d208ac6dead5",
                            TwoFactorEnabled = false,
                            UserName = "demo01@gmail.com"
                        },
                        new
                        {
                            Id = "c60023c7-82ac-4424-9824-7f1bb03a62c7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "35c5bc97-0889-427e-ac90-0698c4dfab9e",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO02@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKXUzdwaFlJ4I6oi2u97ZeTGTg4urVnSXtpxIL4PuJ/pGycowFC2G4QCzw63+80rPA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "39b8187c-803d-47b5-9c97-600cb61a7d96",
                            TwoFactorEnabled = false,
                            UserName = "demo02@gmail.com"
                        },
                        new
                        {
                            Id = "3c23a689-91bd-4cac-bcd7-c359d1f88f51",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d332665-6258-4c65-96eb-8999f080f39e",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "DEMO03@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEMqsuWdoqBcrzg9PvGuMNysE34Tk3JbSSDolg2cZVzFbr7MegNAQVeD53ePWTbwi9w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f8b0683e-f26c-4b1e-a0ea-9641dddb81d6",
                            TwoFactorEnabled = false,
                            UserName = "demo03@gmail.com"
                        },
                        new
                        {
                            Id = "9fad4c83-847d-4fac-88d1-013234a00b30",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a4d6837f-9b0d-4c9d-ad81-2dfb9130f452",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAELVmg0Va4AR2EcDqEf9V346p7myjabz/GynD+W6WfLmqtnypMtufR4y7hA6EpNceYg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "95b4e9e1-1382-4109-8dd9-76e42bfeaeed",
                            TwoFactorEnabled = false,
                            UserName = "admin@gmail.com"
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Bestellungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 4, 28, 8, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 2, 7, 5, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 207,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2022, 5, 31, 3, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 127,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2022, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Menge = 141,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2022, 9, 30, 9, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 175,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2023, 1, 31, 16, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 40,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2023, 5, 10, 21, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 112,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2023, 11, 23, 12, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 252,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2022, 7, 28, 3, 26, 0, 0, DateTimeKind.Unspecified),
                            Menge = 194,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 1, 6, 17, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 179,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2022, 11, 27, 12, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 227,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2022, 8, 26, 22, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 145,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2023, 2, 22, 21, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 163,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 7, 4, 10, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 126,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 4, 9, 3, 3, 0, 0, DateTimeKind.Unspecified),
                            Menge = 55,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2022, 8, 1, 9, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 22,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2023, 10, 22, 21, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 220,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2023, 4, 10, 18, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 65,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2023, 12, 25, 3, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 97,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2022, 12, 20, 14, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 54,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -21,
                            Date = new DateTime(2022, 9, 13, 4, 22, 0, 0, DateTimeKind.Unspecified),
                            Menge = 194,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -22,
                            Date = new DateTime(2023, 12, 28, 10, 1, 0, 0, DateTimeKind.Unspecified),
                            Menge = 201,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -23,
                            Date = new DateTime(2022, 3, 29, 2, 7, 0, 0, DateTimeKind.Unspecified),
                            Menge = 119,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -24,
                            Date = new DateTime(2022, 6, 25, 21, 46, 0, 0, DateTimeKind.Unspecified),
                            Menge = 250,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -25,
                            Date = new DateTime(2023, 12, 29, 3, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 295,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -26,
                            Date = new DateTime(2022, 6, 28, 18, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -27,
                            Date = new DateTime(2023, 2, 27, 4, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 112,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -28,
                            Date = new DateTime(2022, 10, 5, 10, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 173,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -29,
                            Date = new DateTime(2023, 8, 9, 4, 52, 0, 0, DateTimeKind.Unspecified),
                            Menge = 60,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -30,
                            Date = new DateTime(2023, 8, 3, 0, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 132,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -31,
                            Date = new DateTime(2022, 10, 3, 5, 33, 0, 0, DateTimeKind.Unspecified),
                            Menge = 203,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -32,
                            Date = new DateTime(2022, 3, 19, 22, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 219,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -33,
                            Date = new DateTime(2023, 7, 15, 3, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 269,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -34,
                            Date = new DateTime(2023, 3, 31, 13, 43, 0, 0, DateTimeKind.Unspecified),
                            Menge = 71,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -35,
                            Date = new DateTime(2022, 1, 25, 2, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -36,
                            Date = new DateTime(2022, 9, 3, 2, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 48,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -37,
                            Date = new DateTime(2023, 6, 4, 22, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -38,
                            Date = new DateTime(2023, 3, 22, 18, 13, 0, 0, DateTimeKind.Unspecified),
                            Menge = 28,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -39,
                            Date = new DateTime(2022, 5, 14, 12, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 9,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -40,
                            Date = new DateTime(2023, 11, 18, 1, 54, 0, 0, DateTimeKind.Unspecified),
                            Menge = 189,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -41,
                            Date = new DateTime(2023, 10, 5, 22, 14, 0, 0, DateTimeKind.Unspecified),
                            Menge = 87,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -42,
                            Date = new DateTime(2023, 10, 22, 5, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 161,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -43,
                            Date = new DateTime(2022, 3, 3, 1, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 61,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -44,
                            Date = new DateTime(2022, 12, 14, 12, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 141,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -45,
                            Date = new DateTime(2022, 1, 21, 17, 19, 0, 0, DateTimeKind.Unspecified),
                            Menge = 25,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -46,
                            Date = new DateTime(2022, 9, 13, 5, 25, 0, 0, DateTimeKind.Unspecified),
                            Menge = 247,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -47,
                            Date = new DateTime(2022, 8, 9, 6, 50, 0, 0, DateTimeKind.Unspecified),
                            Menge = 30,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -48,
                            Date = new DateTime(2022, 3, 26, 0, 35, 0, 0, DateTimeKind.Unspecified),
                            Menge = 241,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -49,
                            Date = new DateTime(2022, 7, 23, 7, 24, 0, 0, DateTimeKind.Unspecified),
                            Menge = 71,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -50,
                            Date = new DateTime(2022, 8, 8, 23, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 84,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -51,
                            Date = new DateTime(2023, 1, 28, 20, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 255,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -52,
                            Date = new DateTime(2023, 2, 8, 10, 28, 0, 0, DateTimeKind.Unspecified),
                            Menge = 33,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -53,
                            Date = new DateTime(2023, 1, 28, 17, 5, 0, 0, DateTimeKind.Unspecified),
                            Menge = 64,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -54,
                            Date = new DateTime(2022, 8, 8, 1, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 156,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -55,
                            Date = new DateTime(2022, 5, 14, 13, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -56,
                            Date = new DateTime(2023, 8, 12, 17, 21, 0, 0, DateTimeKind.Unspecified),
                            Menge = 103,
                            ProduktId = -14
                        },
                        new
                        {
                            Id = -57,
                            Date = new DateTime(2023, 3, 22, 23, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 63,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -58,
                            Date = new DateTime(2023, 2, 9, 15, 51, 0, 0, DateTimeKind.Unspecified),
                            Menge = 270,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -59,
                            Date = new DateTime(2023, 5, 3, 8, 58, 0, 0, DateTimeKind.Unspecified),
                            Menge = 298,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -60,
                            Date = new DateTime(2022, 4, 28, 20, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -61,
                            Date = new DateTime(2023, 3, 1, 5, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 27,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -62,
                            Date = new DateTime(2023, 4, 25, 1, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 32,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -63,
                            Date = new DateTime(2022, 8, 10, 21, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 269,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -64,
                            Date = new DateTime(2022, 12, 29, 16, 39, 0, 0, DateTimeKind.Unspecified),
                            Menge = 88,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -65,
                            Date = new DateTime(2022, 7, 19, 17, 40, 0, 0, DateTimeKind.Unspecified),
                            Menge = 78,
                            ProduktId = -9
                        },
                        new
                        {
                            Id = -66,
                            Date = new DateTime(2022, 12, 31, 21, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 11,
                            ProduktId = -18
                        },
                        new
                        {
                            Id = -67,
                            Date = new DateTime(2023, 7, 4, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 237,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -68,
                            Date = new DateTime(2022, 6, 26, 23, 12, 0, 0, DateTimeKind.Unspecified),
                            Menge = 217,
                            ProduktId = -1
                        },
                        new
                        {
                            Id = -69,
                            Date = new DateTime(2023, 4, 5, 2, 18, 0, 0, DateTimeKind.Unspecified),
                            Menge = 203,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -70,
                            Date = new DateTime(2022, 1, 13, 16, 55, 0, 0, DateTimeKind.Unspecified),
                            Menge = 237,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -71,
                            Date = new DateTime(2022, 6, 16, 9, 37, 0, 0, DateTimeKind.Unspecified),
                            Menge = 153,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -72,
                            Date = new DateTime(2022, 9, 18, 22, 38, 0, 0, DateTimeKind.Unspecified),
                            Menge = 255,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -73,
                            Date = new DateTime(2023, 5, 18, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            Menge = 37,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -74,
                            Date = new DateTime(2023, 11, 16, 10, 42, 0, 0, DateTimeKind.Unspecified),
                            Menge = 53,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -75,
                            Date = new DateTime(2023, 11, 13, 17, 36, 0, 0, DateTimeKind.Unspecified),
                            Menge = 15,
                            ProduktId = -10
                        },
                        new
                        {
                            Id = -76,
                            Date = new DateTime(2022, 6, 12, 18, 4, 0, 0, DateTimeKind.Unspecified),
                            Menge = 118,
                            ProduktId = -7
                        },
                        new
                        {
                            Id = -77,
                            Date = new DateTime(2022, 3, 29, 5, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 23,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -78,
                            Date = new DateTime(2023, 3, 23, 0, 48, 0, 0, DateTimeKind.Unspecified),
                            Menge = 292,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -79,
                            Date = new DateTime(2023, 9, 22, 5, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 16,
                            ProduktId = -4
                        },
                        new
                        {
                            Id = -80,
                            Date = new DateTime(2023, 1, 29, 0, 57, 0, 0, DateTimeKind.Unspecified),
                            Menge = 173,
                            ProduktId = -13
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Menge")
                        .HasColumnType("int");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProduktId");

                    b.ToTable("Lieferungen");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Date = new DateTime(2022, 9, 30, 8, 2, 0, 0, DateTimeKind.Unspecified),
                            Menge = 755,
                            ProduktId = -2
                        },
                        new
                        {
                            Id = -2,
                            Date = new DateTime(2023, 8, 3, 15, 6, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1243,
                            ProduktId = -17
                        },
                        new
                        {
                            Id = -3,
                            Date = new DateTime(2023, 10, 2, 23, 31, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1462,
                            ProduktId = -3
                        },
                        new
                        {
                            Id = -4,
                            Date = new DateTime(2023, 5, 19, 15, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4773,
                            ProduktId = -13
                        },
                        new
                        {
                            Id = -5,
                            Date = new DateTime(2023, 12, 14, 19, 49, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2047,
                            ProduktId = -8
                        },
                        new
                        {
                            Id = -6,
                            Date = new DateTime(2023, 5, 27, 7, 27, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1698,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -7,
                            Date = new DateTime(2022, 4, 10, 19, 9, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1804,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -8,
                            Date = new DateTime(2023, 6, 22, 21, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1779,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -9,
                            Date = new DateTime(2023, 12, 23, 14, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 576,
                            ProduktId = -5
                        },
                        new
                        {
                            Id = -10,
                            Date = new DateTime(2023, 10, 26, 7, 8, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2024,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -11,
                            Date = new DateTime(2023, 9, 24, 21, 23, 0, 0, DateTimeKind.Unspecified),
                            Menge = 930,
                            ProduktId = -12
                        },
                        new
                        {
                            Id = -12,
                            Date = new DateTime(2022, 6, 30, 14, 44, 0, 0, DateTimeKind.Unspecified),
                            Menge = 849,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -13,
                            Date = new DateTime(2023, 11, 15, 22, 20, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1089,
                            ProduktId = -20
                        },
                        new
                        {
                            Id = -14,
                            Date = new DateTime(2023, 4, 22, 15, 34, 0, 0, DateTimeKind.Unspecified),
                            Menge = 4045,
                            ProduktId = -6
                        },
                        new
                        {
                            Id = -15,
                            Date = new DateTime(2022, 10, 11, 7, 17, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2946,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -16,
                            Date = new DateTime(2023, 7, 5, 2, 59, 0, 0, DateTimeKind.Unspecified),
                            Menge = 3374,
                            ProduktId = -11
                        },
                        new
                        {
                            Id = -17,
                            Date = new DateTime(2023, 11, 15, 10, 53, 0, 0, DateTimeKind.Unspecified),
                            Menge = 842,
                            ProduktId = -19
                        },
                        new
                        {
                            Id = -18,
                            Date = new DateTime(2022, 12, 5, 1, 56, 0, 0, DateTimeKind.Unspecified),
                            Menge = 2630,
                            ProduktId = -15
                        },
                        new
                        {
                            Id = -19,
                            Date = new DateTime(2022, 5, 13, 10, 29, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1848,
                            ProduktId = -16
                        },
                        new
                        {
                            Id = -20,
                            Date = new DateTime(2023, 3, 7, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Menge = 1184,
                            ProduktId = -10
                        });
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Produkte");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Name = "Glaskabel"
                        },
                        new
                        {
                            Id = -2,
                            Name = "Glaskabel"
                        },
                        new
                        {
                            Id = -3,
                            Name = "Aluminiumplatten"
                        },
                        new
                        {
                            Id = -4,
                            Name = "Acrylbolzen"
                        },
                        new
                        {
                            Id = -5,
                            Name = "Papiersensoren"
                        },
                        new
                        {
                            Id = -6,
                            Name = "Aluminiumgehäuse"
                        },
                        new
                        {
                            Id = -7,
                            Name = "Textilschalter"
                        },
                        new
                        {
                            Id = -8,
                            Name = "Kupferkabel"
                        },
                        new
                        {
                            Id = -9,
                            Name = "Metallventile"
                        },
                        new
                        {
                            Id = -10,
                            Name = "Titanrohre"
                        },
                        new
                        {
                            Id = -11,
                            Name = "Glaszahnräder"
                        },
                        new
                        {
                            Id = -12,
                            Name = "Keramikschalter"
                        },
                        new
                        {
                            Id = -13,
                            Name = "Steinrohre"
                        },
                        new
                        {
                            Id = -14,
                            Name = "Aluminiumschrauben"
                        },
                        new
                        {
                            Id = -15,
                            Name = "Aluminiumunterlegscheiben"
                        },
                        new
                        {
                            Id = -16,
                            Name = "Acryldichtungen"
                        },
                        new
                        {
                            Id = -17,
                            Name = "Kupferdichtungen"
                        },
                        new
                        {
                            Id = -18,
                            Name = "Keramikzahnräder"
                        },
                        new
                        {
                            Id = -19,
                            Name = "Silbermuttern"
                        },
                        new
                        {
                            Id = -20,
                            Name = "Goldbolzen"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebEngineering.Areas.Identity.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebEngineering.Models.Bestellung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany("Bestellungen")
                        .HasForeignKey("ProduktId");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Lieferung", b =>
                {
                    b.HasOne("WebEngineering.Models.Produkt", "Produkt")
                        .WithMany("Lieferungen")
                        .HasForeignKey("ProduktId");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("WebEngineering.Models.Produkt", b =>
                {
                    b.Navigation("Bestellungen");

                    b.Navigation("Lieferungen");
                });
#pragma warning restore 612, 618
        }
    }
}
